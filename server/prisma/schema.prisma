// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String?
  patientId     String?         @unique
  triageScore   Int?
  MedicalRecord PatientRecord[]
  Message       Message[]
  Thread        Thread[]
}

model PatientRecord {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  age              String?
  arrivalMode      String?
  injury           String?
  cliefComplaint   String?
  mentalState      String?
  painIntensity    String?
  bloodPressure    String?
  heartRate        String?
  respiratoryRate  String?
  bodyTemperature  String?
  oxygenSaturation String?
  User             User?    @relation(fields: [userId], references: [id])
  userId           String?

  @@index([userId])
}

model Thread {
  id        String    @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Messages  Message[]
  User      User      @relation(fields: [userId], references: [id])
  userId    String
}

model Message {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  metadata  String
  role      String   @default("AI")
  Thread    Thread?  @relation(fields: [threadId], references: [id])
  threadId  String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}
